<%- include('partials/header'); %>
<%- include('partials/navbar'); %>

<style>
  /* Google Font */
  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

  body {
    font-family: 'Inter', sans-serif;
    background-color: #F7F9FC;
    color: #1D3557;
    padding-top: 80px; 
  }

  .main-container {
    background-color: #fff;
    padding: 2.5rem;
    border-radius: 8px;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.1);
    max-width: 800px;
    width: 100%;
    margin: 0 auto 2rem auto; 
  }

  
  h1 {
    color: #1D3557;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .form-group label {
    font-weight: 600;
    color: #333;
  }

  .city-input-group {
    position: relative;
  }
  
  .form-control {
    border-radius: 8px;
    margin-bottom: 1rem;
    border: 1px solid #ddd;
    font-size: 1rem;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
  }

  select.form-control {
   
    font-size: 1rem;
    color: #333; 
    background-color: #fff; 
    appearance: none; 
    -webkit-appearance: none; 
    -moz-appearance: none;
  }

  select.form-control::after {
    content: '\25BC'; 
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
  }

  .btn-custom {
    background:  #FF6B35;
    color: #fff;
    border: none;
    border-radius: 8px;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    transition: background 0.3s ease-in-out;
    width: 100%;
  }

  .btn-custom:hover {
    background-color: #E65A2D;
    transform: scale(1.05);
  }

  .btn-outline-secondary {
    border-radius: 8px;
    border-color: #E65A2D;
    color: #E65A2D;
    padding: 0.5rem 1rem; 
  }

  .btn-outline-secondary:hover {
    background: #E65A2D;
    color: white;
  }

  .form-check-input:checked {
    background-color:#E65A2D;
    border-color: #E65A2D;
  }

  .input-group {
    display: flex;
    align-items: center;
  }

  .input-group button {
    flex: 0 0 auto;
  }

  .input-group input {
    flex: 1 1 auto;
    text-align: center;
  }
  
  .suggestions-list {
    list-style: none;
    margin: 0;
    padding: 0;
    border: 1px solid #ccc;
    max-height: 12em;
    overflow-y: auto;
    position: absolute;
    background: white;
    z-index: 1000;
    width: 100%;
  }

  .suggestions-list:empty {
    display: none;
  }

  .suggestions-list li {
    padding: 0.5em 1em;
    cursor: pointer;
  }

  .suggestions-list li:hover {
    background-color: #f0f0f0;
  }
</style>
<script>
  function normalizeInputs() {
    const originInput = document.getElementById("origin");
    const destinationInput = document.getElementById("destination");
    if (originInput) originInput.value = originInput.value.trim().toLowerCase();
    if (destinationInput) destinationInput.value = destinationInput.value.trim().toLowerCase();
  }
</script>

<div class="main-container">
  <% if (messages.error) { %>
    <div class="alert alert-danger"><%= messages.error %></div>
  <% } %>
  <% if (messages.success) { %>
    <div class="alert alert-success"><%= messages.success %></div>
  <% } %>

  <h1>Plan Your Next Adventure</h1>

  <form action="/plantrip" method="POST" class="needs-validation" novalidate>
    <div class="row justify-content-center">  
      <div class="col-md-10"> 
        <div class="form-group city-input-group">
          <label for="origin">Origin</label>
          <input type="text" class="form-control" id="origin" name="originDisplay" 
            placeholder="e.g., New York" autocomplete="off" 
            oninput="handleInputSuggestions(event)" onblur="hideSuggestions()" required>
          <input type="hidden" id="originCode" name="origin">
          <ul id="origin-suggestions" class="suggestions-list"></ul>
        </div>

        <div class="form-group city-input-group">
          <label for="destination">Destination</label>
          <input type="text" class="form-control" id="destination" name="destinationDisplay" 
            placeholder="e.g., Paris" autocomplete="off" 
            oninput="handleInputSuggestions(event)" onblur="hideSuggestions()" required>
          <input type="hidden" id="destinationCode" name="destination">
          <ul id="destination-suggestions" class="suggestions-list"></ul>
        </div>

        <div class="form-group">
          <label for="departureDate">Departure Date</label>
          <input type="date" class="form-control" id="departureDate" name="departureDate" onfocus="this.showPicker()" required>
        </div>

        <div class="form-group">
          <label for="travelDays">Number of Travel Days</label>
          <div class="input-group">
            <button class="btn btn-outline-secondary" type="button" id="decrementDays">-</button>
            <input type="number" class="form-control" id="travelDays" name="travelDays" value="1" min="1" max="30">
            <button class="btn btn-outline-secondary" type="button" id="incrementDays">+</button>
          </div>
        </div>

        <div class="form-group">
          <label for="budget">Budget</label>
          <select class="form-control" id="budget" name="budget">
            <option value="low">Low</option>
            <option value="medium">Medium</option>
            <option value="high">High</option>
          </select>
        </div>

        <div class="form-group">
          <label for="travelCompanion">Who are you traveling with?</label>
          <select class="form-control" id="travelCompanion" name="travelCompanion">
            <option value="solo">Solo</option>
            <option value="couple">Couple</option>
            <option value="family">Family</option>
            <option value="friends">Friends</option>
          </select>
        </div>

        <div class="form-group">
          <label>Preferred Activities</label>
          <div> 
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="beaches" name="activities[]" value="beaches">
              <label class="form-check-label" for="beaches">Beaches</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="sightseeing" name="activities[]" value="sightseeing">
              <label class="form-check-label" for="sightseeing">Sightseeing</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="food" name="activities[]" value="food">
              <label class="form-check-label" for="food">Food & Dining</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="shopping" name="activities[]" value="shopping">
              <label class="form-check-label" for="shopping">Shopping</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="Adventure" name="activities[]" value="Adventure">
              <label class="form-check-label" for="Adventure">Adventure</label>
            </div>
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="Religious" name="activities[]" value="Religious">
              <label class="form-check-label" for="Religious">Religious</label>
            </div>
          </div>
        </div>

        <div class="text-center mt-4"> 
          <button class="btn btn-custom" type="submit">Plan Trip</button>
        </div>
      </div>
    </div>
  </form>
</div>

<%- include('partials/footer'); %>

<script>
  document.getElementById("decrementDays").addEventListener("click", function () {
    let input = document.getElementById("travelDays");
    if (input.value > 1) input.value--;
  });

  document.getElementById("incrementDays").addEventListener("click", function () {
    let input = document.getElementById("travelDays");
    if (input.value < 30) input.value++;
  });

  async function handleInputSuggestions(event) {
    const input = event.target;
    const suggestions = document.getElementById(`${input.id}-suggestions`);
    const query = input.value.trim();
    if (query.length < 2) {
      suggestions.innerHTML = '';
      return;
    }
    try {
      const res = await fetch(`/city-suggestions?q=${encodeURIComponent(query)}`);
      const cities = await res.json();
      if (input.value.trim().length < 2 || input.value.trim() !== query) {
        suggestions.innerHTML = '';
        return;
      }
      suggestions.innerHTML = '';
      cities.forEach(city => {
        const li = document.createElement('li');
        li.textContent = `${city.name} (${city.iataCode})`;
        li.addEventListener('click', () => {
          input.value = li.textContent;
          const hiddenInputId = input.id + 'Code'; 
          const hiddenInput = document.getElementById(hiddenInputId);
          hiddenInput.value = city.iataCode;
          suggestions.innerHTML = '';
        });
        suggestions.appendChild(li);
      });
    } catch (error) {
      console.error('Error fetching suggestions:', error);
      suggestions.innerHTML = '';
    }
  }
  
  function hideSuggestions() {
    setTimeout(() => {
      const allSuggestions = document.querySelectorAll('.suggestions-list');
      allSuggestions.forEach(list => {
        list.innerHTML = '';
      });
    }, 150);
  }
</script>